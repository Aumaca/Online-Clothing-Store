# Generated by Django 4.1.1 on 2022-09-24 04:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HomeCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('title', models.CharField(max_length=35)),
                ('subtitle', models.CharField(max_length=100)),
                ('url', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_message', models.TextField()),
                ('text_color', models.CharField(choices=[('Green', 'Green'), ('Red', 'Red'), ('White', 'White'), ('Yellow', 'Yellow'), ('Pink', 'Pink'), ('Black', 'Black'), ('Orange', 'Orange'), ('Grey', 'Grey')], max_length=15)),
                ('background_color', models.CharField(choices=[('Green', 'Green'), ('Red', 'Red'), ('White', 'White'), ('Yellow', 'Yellow'), ('Pink', 'Pink'), ('Black', 'Black'), ('Orange', 'Orange'), ('Grey', 'Grey')], max_length=15)),
                ('url', models.TextField(null=True)),
                ('index', models.IntegerField()),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('title', models.CharField(blank=True, max_length=35, null=True)),
                ('title_color', models.CharField(choices=[('Green', 'Green'), ('Red', 'Red'), ('White', 'White'), ('Yellow', 'Yellow'), ('Pink', 'Pink'), ('Black', 'Black'), ('Orange', 'Orange'), ('Grey', 'Grey')], max_length=15)),
                ('subtitle', models.CharField(blank=True, max_length=35, null=True)),
                ('subtitle_color', models.CharField(choices=[('Green', 'Green'), ('Red', 'Red'), ('White', 'White'), ('Yellow', 'Yellow'), ('Pink', 'Pink'), ('Black', 'Black'), ('Orange', 'Orange'), ('Grey', 'Grey')], max_length=15)),
                ('url', models.TextField(null=True)),
                ('index', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('price', models.FloatField()),
                ('new_price', models.FloatField(blank=True, null=True)),
                ('has_small', models.BooleanField()),
                ('has_medium', models.BooleanField()),
                ('has_large', models.BooleanField()),
                ('infant', models.BooleanField()),
                ('gender', models.CharField(choices=[('W', 'Woman'), ('M', 'Men'), ('U', 'Unissex')], max_length=1)),
                ('description', models.TextField()),
                ('composition', models.TextField()),
                ('image1', models.ImageField(upload_to='')),
                ('image2', models.ImageField(upload_to='')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='blog.producttype')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35)),
                ('link', models.TextField()),
                ('index', models.IntegerField()),
                ('products', models.ManyToManyField(blank=True, to='blog.producttype')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('products_in_cart', models.ManyToManyField(default=None, to='blog.product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
